<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:SandBeige.MediaBox.Styles.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Definition\Definitions.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StandardToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Common.Border.Light}" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Common.Foreground.Normal}" />
        <Setter Property="helpers:CheckableControlHelper.CheckedBackgroundBrush" Value="Transparent" />
        <Setter Property="helpers:CheckableControlHelper.CheckedBorderBrush" Value="{DynamicResource Brush.Common.Border.Light.Selected}" />
        <Setter Property="helpers:CheckableControlHelper.CheckedForegroundBrush" Value="{DynamicResource Brush.Common.Foreground.Normal}" />
        <Setter Property="helpers:CheckableControlHelper.HoverBackgroundBrush" Value="{DynamicResource Brush.Common.Background.Light.Highlight}" />
        <Setter Property="helpers:CheckableControlHelper.HoverBorderBrush" Value="Transparent" />
        <Setter Property="helpers:CheckableControlHelper.HoverForegroundBrush" Value="{DynamicResource Brush.Common.Foreground.Normal}" />
        <Setter Property="helpers:CheckableControlHelper.DisabledBackgroundBrush" Value="Transparent" />
        <Setter Property="helpers:CheckableControlHelper.DisabledBorderBrush" Value="Transparent" />
        <Setter Property="helpers:CheckableControlHelper.DisabledForegroundBrush" Value="{DynamicResource Brush.Common.Foreground.Normal.Disabled}" />
        <Setter Property="helpers:CheckableControlHelper.PressedBackgroundBrush" Value="{DynamicResource Brush.Common.Background.Light.Selected}" />
        <Setter Property="helpers:CheckableControlHelper.PressedBorderBrush" Value="Transparent" />
        <Setter Property="helpers:CheckableControlHelper.PressedForegroundBrush" Value="{DynamicResource Brush.Common.Foreground.Normal}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <Grid Margin="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.HoverBorderBrush), Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.PressedBackgroundBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.PressedBorderBrush), Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.PressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.DisabledBorderBrush), Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.DisabledForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.CheckedBackgroundBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.CheckedBorderBrush), Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:CheckableControlHelper.CheckedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="IconToggleButton"
        BasedOn="{StaticResource StandardToggleButton}"
        TargetType="ToggleButton">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="helpers:CheckableControlHelper.CheckedBorderBrush" Value="Transparent" />
    </Style>
</ResourceDictionary>