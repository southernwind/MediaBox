<UserControl
	x:Class="SandBeige.MediaBox.Views.Album.AlbumView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:SandBeige.MediaBox.Controls.Controls;assembly=MediaBox.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:enum="clr-namespace:SandBeige.MediaBox.Composition.Enum;assembly=MediaBox.Composition"
	xmlns:local="clr-namespace:SandBeige.MediaBox.Views.Album"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:mediaVm="clr-namespace:SandBeige.MediaBox.ViewModels.Media"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:vm="clr-namespace:SandBeige.MediaBox.ViewModels.Album"
	xmlns:wpftk="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
	d:DataContext="{d:DesignInstance vm:AlbumViewModel}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<Grid>
		<DockPanel>
			<DockPanel.Resources>
				<Style BasedOn="{StaticResource {x:Type controls:TwoWayBindableSelectedItemsMediaListBox}}" TargetType="controls:TwoWayBindableSelectedItemsMediaListBox">
					<Setter Property="Visibility" Value="Collapsed" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding DisplayMode.Value}" Value="{x:Static enum:DisplayMode.Detail}">
							<Setter Property="Visibility" Value="Visible" />
							<Setter Property="DockPanel.Dock" Value="Bottom" />
							<Setter Property="VirtualizingPanel.ScrollUnit" Value="Item" />
							<Setter Property="ItemTemplate">
								<Setter.Value>
									<DataTemplate>
										<Grid>
											<Grid.Style>
												<Style TargetType="Grid">
													<Style.Triggers>
														<DataTrigger Binding="{Binding Exists}" Value="False">
															<Setter Property="OpacityMask" Value="#3000" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Grid.Style>
											<ContentControl>
												<Viewbox Height="80" Stretch="UniformToFill">
													<Image Source="{Binding Thumbnail.ImageSource}" />
												</Viewbox>
											</ContentControl>
											<Grid.Resources>
												<Style TargetType="Viewbox">
													<Setter Property="Width" Value="50" />
													<Setter Property="Margin" Value="0,0" />
													<Style.Triggers>
														<DataTrigger Value="true">
															<DataTrigger.Binding>
																<MultiBinding Converter="{StaticResource EqualsConverter}">
																	<Binding Path="DataContext.CurrentItem.Value" RelativeSource="{RelativeSource AncestorType=local:AlbumView}" />
																	<Binding />
																</MultiBinding>
															</DataTrigger.Binding>
															<Setter Property="Width" Value="Auto" />
															<Setter Property="Margin" Value="10,0" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Grid.Resources>
										</Grid>
									</DataTemplate>
								</Setter.Value>
							</Setter>
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel Orientation="Horizontal" />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</DataTrigger>
						<DataTrigger Binding="{Binding DisplayMode.Value}" Value="{x:Static enum:DisplayMode.Library}">
							<Setter Property="Visibility" Value="Visible" />
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="BorderThickness" Value="0" />
							<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
							<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
							<Setter Property="ItemTemplate">
								<Setter.Value>
									<DataTemplate>
										<Grid>
											<Grid.Style>
												<Style TargetType="Grid">
													<Style.Triggers>
														<DataTrigger Binding="{Binding Exists}" Value="False">
															<Setter Property="OpacityMask" Value="#3000" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Grid.Style>
											<Grid.InputBindings>
												<MouseBinding
													Command="{Binding DataContext.ChangeDisplayModeCommand, RelativeSource={RelativeSource AncestorType={x:Type local:AlbumView}}}"
													CommandParameter="{x:Static enum:DisplayMode.Detail}"
													MouseAction="LeftDoubleClick" />
											</Grid.InputBindings>
											<!--  イベントをGridまで伝搬するためのテキストブロック  -->
											<TextBlock />
											<!--  表示用  -->
											<Image
												Width="100"
												Height="100"
												Source="{Binding Thumbnail.ImageSource, IsAsync=True}" />
										</Grid>
									</DataTemplate>
								</Setter.Value>
							</Setter>
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<wpftk:VirtualizingWrapPanel ItemSize="120,120" />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
							<Setter Property="ItemContainerStyle" Value="{StaticResource TileListBoxItem}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</DockPanel.Resources>
			<controls:TwoWayBindableSelectedItemsMediaListBox
				Name="ListBox"
				BindableSelectedItems="{Binding SelectedMediaFiles.Value}"
				ItemsSource="{Binding Items}"
				PreviewMouseWheel="ListBoxEx_PreviewMouseWheel"
				SelectedIndex="{Binding CurrentIndex.Value, Mode=OneWayToSource}"
				SelectionMode="Extended">
				<ItemsControl.Resources>
					<ResourceDictionary>
						<ContextMenu x:Key="MediaFileListContextMenu" d:DataContext="{d:DesignInstance mediaVm:ImageFileViewModel}">
							<MenuItem Header="開く" ItemsSource="{Binding ExternalTools}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding DisplayName.Value}">
											<TextBlock.InputBindings>
												<MouseBinding
													Command="{Binding StartCommand}"
													CommandParameter="{Binding DataContext.FilePath, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
													MouseAction="LeftClick" />
											</TextBlock.InputBindings>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</MenuItem>
							<MenuItem Header="プロパティ" />
							<MenuItem Header="評価設定">
								<MenuItem Command="{Binding DataContext.MediaFileInformations.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:AlbumView}}" Header="★★★★★">
									<MenuItem.CommandParameter>
										<sys:Int32>5</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Command="{Binding DataContext.MediaFileInformations.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:AlbumView}}" Header="★★★★">
									<MenuItem.CommandParameter>
										<sys:Int32>4</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Command="{Binding DataContext.MediaFileInformations.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:AlbumView}}" Header="★★★">
									<MenuItem.CommandParameter>
										<sys:Int32>3</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Command="{Binding DataContext.MediaFileInformations.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:AlbumView}}" Header="★★">
									<MenuItem.CommandParameter>
										<sys:Int32>2</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Command="{Binding DataContext.MediaFileInformations.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:AlbumView}}" Header="★">
									<MenuItem.CommandParameter>
										<sys:Int32>1</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
							</MenuItem>
							<MenuItem Command="{Binding DataContext.MediaFileInformations.Value.RecreateThumbnailCommand, RelativeSource={RelativeSource AncestorType=local:AlbumView}}" Header="サムネイル再作成" />
							<MenuItem Header="アルバムに追加" ItemsSource="{Binding DataContext.AlbumSelector.AlbumList, RelativeSource={RelativeSource AncestorType=ListBox}}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Title.Value}">
											<TextBlock.InputBindings>
												<MouseBinding
													Command="{Binding AddMediaFileCommand}"
													CommandParameter="{Binding DataContext.SelectedMediaFiles.Value, RelativeSource={RelativeSource AncestorType=ListBox}}"
													MouseAction="LeftClick" />
											</TextBlock.InputBindings>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</MenuItem>
						</ContextMenu>
						<Style BasedOn="{StaticResource TileListBoxItem}" TargetType="ListBoxItem">
							<Setter Property="ContextMenu" Value="{DynamicResource MediaFileListContextMenu}" />
						</Style>
					</ResourceDictionary>
				</ItemsControl.Resources>
			</controls:TwoWayBindableSelectedItemsMediaListBox>

			<Grid>
				<Grid.Style>
					<Style TargetType="Grid">
						<Setter Property="Visibility" Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding DisplayMode.Value}" Value="{x:Static enum:DisplayMode.Detail}">
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
				<Grid.Resources>
					<Style x:Key="ImageViewerStyle" TargetType="controls:ImageEx">
						<Setter Property="Visibility" Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type mediaVm:ImageFileViewModel}">
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
					<Style x:Key="VideoViewerStyle" TargetType="controls:VideoPlayer">
						<Setter Property="Visibility" Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type mediaVm:VideoFileViewModel}">
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Resources>
				<!--  TODO: このままだとImageがVideoFileViewModelにないのでBindingErrorが出る。どうにかしてVideoPlayerのインスタンスを再作成させないで表示を切り替えられるようにする。  -->
				<controls:ImageEx
					DataContext="{Binding CurrentItem.Value}"
					Source="{Binding Image}"
					Style="{StaticResource ImageViewerStyle}" />
				<controls:VideoPlayer
					AltImage="{Binding Thumbnail.ImageSource}"
					DataContext="{Binding CurrentItem.Value}"
					FilePath="{Binding FilePath}"
					Style="{StaticResource VideoViewerStyle}" />
			</Grid>
		</DockPanel>

		<Grid>
			<Grid.Style>
				<Style TargetType="Grid">
					<Setter Property="Visibility" Value="Collapsed" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding DisplayMode.Value}" Value="{x:Static enum:DisplayMode.Map}">
							<Setter Property="Visibility" Value="Visible" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
			<DockPanel>
				<StackPanel DockPanel.Dock="Top">
					<TextBlock Text="{Binding Map.Value.ZoomLevel.Value, UpdateSourceTrigger=PropertyChanged}" />
					<TextBlock Text="{Binding Map.Value.CenterLocation.Value.Latitude, UpdateSourceTrigger=PropertyChanged}" />
					<TextBlock Text="{Binding Map.Value.CenterLocation.Value.Longitude, UpdateSourceTrigger=PropertyChanged}" />
				</StackPanel>
				<ContentControl Content="{Binding MapControl.Value}" DataContext="{Binding Map.Value}" />
			</DockPanel>
		</Grid>
	</Grid>
</UserControl>
