<UserControl
	x:Class="SandBeige.MediaBox.Views.Album.MediaList"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:behaviors="clr-namespace:SandBeige.MediaBox.Controls.Behaviors;assembly=MediaBox.Controls"
	xmlns:controls="clr-namespace:SandBeige.MediaBox.Controls.Controls;assembly=MediaBox.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:enum="clr-namespace:SandBeige.MediaBox.Composition.Enum;assembly=MediaBox.Composition"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:local="clr-namespace:SandBeige.MediaBox.Views.Album"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:mediaVm="clr-namespace:SandBeige.MediaBox.ViewModels.Media"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:vm="clr-namespace:SandBeige.MediaBox.ViewModels.Album"
	xmlns:wpftk="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
	d:DataContext="{d:DesignInstance vm:AlbumViewModel}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ContextMenu x:Key="MediaFileListContextMenu" d:DataContext="{d:DesignInstance mediaVm:ImageFileViewModel}">
				<MenuItem Header="開く" ItemsSource="{Binding ExternalTools}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding DisplayName.Value}">
								<TextBlock.InputBindings>
									<MouseBinding
										Command="{Binding StartCommand}"
										CommandParameter="{Binding DataContext.FilePath, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										MouseAction="LeftClick" />
								</TextBlock.InputBindings>
							</TextBlock>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</MenuItem>
				<MenuItem
					Command="{Binding DataContext.MediaFileInformation.Value.OpenDirectoryCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}"
					CommandParameter="{Binding FilePath}"
					Header="ファイルの場所を開く" />
				<MenuItem Header="評価設定">
					<MenuItem Command="{Binding DataContext.MediaFileInformation.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}" Header="★★★★★">
						<MenuItem.CommandParameter>
							<sys:Int32>5</sys:Int32>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Command="{Binding DataContext.MediaFileInformation.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}" Header="★★★★">
						<MenuItem.CommandParameter>
							<sys:Int32>4</sys:Int32>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Command="{Binding DataContext.MediaFileInformation.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}" Header="★★★">
						<MenuItem.CommandParameter>
							<sys:Int32>3</sys:Int32>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Command="{Binding DataContext.MediaFileInformation.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}" Header="★★">
						<MenuItem.CommandParameter>
							<sys:Int32>2</sys:Int32>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Command="{Binding DataContext.MediaFileInformation.Value.SetRateCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}" Header="★">
						<MenuItem.CommandParameter>
							<sys:Int32>1</sys:Int32>
						</MenuItem.CommandParameter>
					</MenuItem>
				</MenuItem>
				<MenuItem Command="{Binding DataContext.MediaFileInformation.Value.RecreateThumbnailCommand, RelativeSource={RelativeSource AncestorType=local:MediaList}}" Header="サムネイル再作成" />
				<MenuItem Header="アルバムに追加" ItemsSource="{Binding DataContext.AlbumSelector.AlbumList, RelativeSource={RelativeSource AncestorType=ListBox}}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Title.Value}">
								<TextBlock.InputBindings>
									<MouseBinding
										Command="{Binding AddMediaFileCommand}"
										CommandParameter="{Binding DataContext.SelectedMediaFiles.Value, RelativeSource={RelativeSource AncestorType=ListBox}}"
										MouseAction="LeftClick" />
								</TextBlock.InputBindings>
							</TextBlock>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</MenuItem>
			</ContextMenu>
			<Style BasedOn="{StaticResource {x:Type controls:TwoWayBindableSelectedItemsMediaListBox}}" TargetType="controls:TwoWayBindableSelectedItemsMediaListBox">
				<Setter Property="Visibility" Value="Collapsed" />
				<Style.Triggers>
					<!--  リストの表示する場合はコチラにトリガーを追加  -->
					<DataTrigger Binding="{Binding DisplayMode.Value}" Value="{x:Static enum:DisplayMode.Detail}">
						<Setter Property="Visibility" Value="Visible" />
						<Setter Property="VirtualizingPanel.ScrollUnit" Value="Item" />
						<Setter Property="ItemTemplate">
							<Setter.Value>
								<DataTemplate>
									<Grid ContextMenu="{DynamicResource MediaFileListContextMenu}">
										<Grid.Style>
											<Style TargetType="Grid">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Exists}" Value="False">
														<Setter Property="OpacityMask" Value="#3000" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Grid.Style>
										<ContentControl>
											<Viewbox Height="80" Stretch="UniformToFill">
												<Image Source="{Binding ThumbnailFilePath, IsAsync=True}" />
											</Viewbox>
										</ContentControl>
										<Grid.Resources>
											<Style TargetType="Viewbox">
												<Setter Property="Width" Value="50" />
												<Setter Property="Margin" Value="0,0" />
												<Style.Triggers>
													<DataTrigger Value="true">
														<DataTrigger.Binding>
															<MultiBinding Converter="{StaticResource EqualsConverter}">
																<Binding Path="DataContext.CurrentItem.Value" RelativeSource="{RelativeSource AncestorType=local:MediaList}" />
																<Binding />
															</MultiBinding>
														</DataTrigger.Binding>
														<Setter Property="Width" Value="Auto" />
														<Setter Property="Margin" Value="10,0" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Grid.Resources>
									</Grid>
								</DataTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<DataTrigger Binding="{Binding DisplayMode.Value}" Value="{x:Static enum:DisplayMode.Library}">
						<Setter Property="Visibility" Value="Visible" />
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="BorderThickness" Value="0" />
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
						<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
						<Setter Property="ItemTemplate">
							<Setter.Value>
								<DataTemplate>
									<Grid ContextMenu="{DynamicResource MediaFileListContextMenu}">
										<Grid.Style>
											<Style TargetType="Grid">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Exists}" Value="False">
														<Setter Property="OpacityMask" Value="#3000" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Grid.Style>
										<Grid.InputBindings>
											<MouseBinding
												Command="{Binding DataContext.ChangeDisplayModeCommand, RelativeSource={RelativeSource AncestorType={x:Type local:MediaList}}}"
												CommandParameter="{x:Static enum:DisplayMode.Detail}"
												MouseAction="LeftDoubleClick" />
										</Grid.InputBindings>
										<!--  イベントをGridまで伝搬するためのテキストブロック  -->
										<TextBlock />
										<!--  表示用  -->
										<Image
											Width="{Binding DataContext.ZoomLevel.Value, RelativeSource={RelativeSource AncestorType={x:Type local:MediaList}}, Converter={StaticResource ZoomLevelToImageSideLengthConverter}}"
											Height="{Binding DataContext.ZoomLevel.Value, RelativeSource={RelativeSource AncestorType={x:Type local:MediaList}}, Converter={StaticResource ZoomLevelToImageSideLengthConverter}}"
											Source="{Binding ThumbnailFilePath, IsAsync=True}" />
									</Grid>
								</DataTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<wpftk:VirtualizingWrapPanel ItemSize="{Binding ZoomLevel.Value, Converter={StaticResource ZoomLevelToItemSizeConverter}}" />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="ItemContainerStyle" Value="{StaticResource TileListBoxItem}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<controls:TwoWayBindableSelectedItemsMediaListBox
		Name="ListBox"
		BindableSelectedItems="{Binding SelectedMediaFiles.Value}"
		ItemsSource="{Binding Items}"
		SelectedIndex="{Binding CurrentIndex.Value, Mode=TwoWay}"
		SelectionMode="Extended">
		<i:Interaction.Behaviors>
			<behaviors:DeviceEventBehaviorForUIElement
				KeyEventCommand="{Binding GestureReceiver.KeyEventCommand}"
				MouseEventCommand="{Binding GestureReceiver.MouseEventCommand}"
				MouseWheelEventCommand="{Binding GestureReceiver.MouseWheelEventCommand}" />
		</i:Interaction.Behaviors>
	</controls:TwoWayBindableSelectedItemsMediaListBox>
</UserControl>
