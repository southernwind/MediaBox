<UserControl x:Class="SandBeige.MediaBox.Views.Media.Detail.MediaList"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
			 xmlns:local="clr-namespace:SandBeige.MediaBox.Views.Media.Detail"
			 xmlns:vm="clr-namespace:SandBeige.MediaBox.ViewModels.Album"
			 xmlns:mediaV="clr-namespace:SandBeige.MediaBox.Views.Media"
			 xmlns:controls="clr-namespace:SandBeige.MediaBox.Controls.Controls;assembly=MediaBox.Controls"
			 xmlns:enum="clr-namespace:SandBeige.MediaBox.Composition.Enum;assembly=MediaBox.Composition"
			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800"
			 d:DataContext="{d:DesignInstance vm:AlbumViewModel}">
	<DockPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="10">
			<Button Content="戻る" Padding="20,5" Command="{Binding ChangeDisplayModeCommand}" CommandParameter="{x:Static enum:DisplayMode.Library}"/>
			<Button Content="マップ表示" Padding="20,5" Command="{Binding ChangeDisplayModeCommand}" CommandParameter="{x:Static enum:DisplayMode.Map}"/>
		</StackPanel>
		<mediaV:TwoWayBindableSelectedItemsMediaListBox
			DockPanel.Dock="Bottom"
			ItemsSource="{Binding Items}"
			SelectionMode="Extended"
			BindableSelectedItems="{Binding SelectedMediaFiles.Value,Mode=TwoWay}"
			PreviewMouseWheel="ListBoxEx_PreviewMouseWheel">
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<Grid>
						<ContentControl>
							<Viewbox Stretch="UniformToFill" Height="80">
								<Image Source="{Binding Thumbnail.Value.ImageSource}"/>
							</Viewbox>
						</ContentControl>
						<Grid.Resources>
							<Style TargetType="Viewbox">
								<Setter Property="Width" Value="50"/>
								<Setter Property="Margin" Value="0,0"/>
								<Style.Triggers>
									<DataTrigger Value="true">
										<DataTrigger.Binding>
											<MultiBinding Converter="{StaticResource EqualsConverter}">
												<Binding Path="DataContext.CurrentItem.Value" RelativeSource="{RelativeSource AncestorType=local:MediaList}"/>
												<Binding/>
											</MultiBinding>
										</DataTrigger.Binding>
										<Setter Property="Width" Value="Auto"/>
										<Setter Property="Margin" Value="10,0"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Resources>
					</Grid>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</mediaV:TwoWayBindableSelectedItemsMediaListBox>

		<Grid DataContext="{Binding CurrentItem.Value}">
			<Image
				Stretch="Uniform"
				Source="{Binding Image.Value}"/>
			<Image
				Stretch="Uniform"
				Source="{Binding Thumbnail.Value.ImageSource}">
				<Image.Style>
					<Style TargetType="Image">
						<Setter Property="Visibility" Value="Hidden"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding Image.Value}" Value="{x:Null}">
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Grid>
	</DockPanel>
</UserControl>
