<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:maControls="http://metro.mahapps.com/winfx/xaml/controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Colors.xaml" />
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TreeView.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="StandardTreeViewItem" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
		<Setter Property="maControls:ItemHelper.SelectedForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.SelectedBackgroundBrush" Value="{StaticResource BackgroundHighlighted}" />
		<Setter Property="maControls:ItemHelper.ActiveSelectionForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{StaticResource BackgroundSelected}" />
		<Setter Property="maControls:ItemHelper.DisabledForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.DisabledBackgroundBrush" Value="{StaticResource Background}" />
		<Setter Property="maControls:ItemHelper.DisabledSelectedForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{StaticResource BackgroundSelected}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<StackPanel>
						<Border
							x:Name="Border"
							MinHeight="{TemplateBinding MinHeight}"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid
								Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
								VerticalAlignment="Stretch"
								Background="Transparent">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" MinWidth="19" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<ToggleButton
									x:Name="Expander"
									ClickMode="Press"
									IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
									Style="{StaticResource ExpandCollapseToggleStyle}" />
								<ContentPresenter
									x:Name="PART_Header"
									Grid.Column="1"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									ContentSource="Header"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>

						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(maControls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="Selector.IsSelectionActive" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(maControls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
						</MultiTrigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
							<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
								<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="StandardTreeView" TargetType="{x:Type TreeView}" BasedOn="{StaticResource VirtualisedMetroTreeView}">
		<Style.Resources>
			<Style TargetType="TreeViewItem" BasedOn="{StaticResource StandardTreeViewItem}">
			</Style>
		</Style.Resources>
	</Style>

</ResourceDictionary>