<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ComboBox.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="StandardComboBoxItem" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource Foreground}" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Grid>
						<Border
							x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1"
							SnapsToDevicePixels="True" />
						<ContentPresenter Margin="8,5" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter Property="Background" Value="{DynamicResource BackgroundHighlighted}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="StandardComboBoxToggleButtonTemplate" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border
				Name="Border"
				Grid.ColumnSpan="2"
				Background="{DynamicResource BackgroundNormal}"
				BorderBrush="{DynamicResource BorderBrushNormal}"
				BorderThickness="1,1,1,1"
				CornerRadius="0" />
			<Border
				Name="ButtonBorder"
				Grid.Column="1"
				Margin="1,1,1,1"
				Background="{DynamicResource BackgroundNormal}"
				BorderBrush="Transparent"
				BorderThickness="1,0,0,0"
				CornerRadius="0, 0, 0, 0" />
			<Path
				Name="Arrow"
				Grid.Column="1"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Data="M0,0 L5,0 L3,3"
				Fill="{DynamicResource Foreground}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{DynamicResource BackgroundHighlighted}" />
				<Setter TargetName="Border" Property="Panel.Background" Value="{DynamicResource BackgroundHighlighted}" />
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{DynamicResource BackgroundSelected}" />
				<Setter TargetName="Arrow" Property="Shape.Fill" Value="{DynamicResource Foreground}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="StandardComboBox" TargetType="{x:Type ComboBox}">
		<Style.Resources>
			<Style BasedOn="{StaticResource StandardComboBoxItem}" TargetType="{x:Type ComboBoxItem}" />
		</Style.Resources>
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource Foreground}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton
							Name="ToggleButton"
							Margin="0,0,0,0"
							ClickMode="Press"
							Focusable="False"
							IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							Template="{StaticResource StandardComboBoxToggleButtonTemplate}" />

						<ContentPresenter
							Name="ContentSite"
							Margin="5,3,23,3"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Content="{TemplateBinding ComboBox.SelectionBoxItem}"
							ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							IsHitTestVisible="False" />
						<TextBox
							Name="PART_EditableTextBox"
							Margin="3,3,23,3"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Background="Transparent"
							Focusable="True"
							IsReadOnly="{TemplateBinding IsReadOnly}"
							Visibility="Hidden">
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox">
									<Border Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<Popup
							Name="Popup"
							AllowsTransparency="True"
							Focusable="False"
							IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							Placement="Bottom"
							PopupAnimation="Slide">
							<Grid
								Name="DropDown"
								MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
								SnapsToDevicePixels="True">
								<Border
									Name="DropDownBorder"
									Background="{DynamicResource Background}"
									CornerRadius="0" />
								<ScrollViewer SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource Foreground}" />
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
							<Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
							<Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>