<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:maControls="http://metro.mahapps.com/winfx/xaml/controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="TileListBoxItem" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="{DynamicResource BackgroundNormal}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid Margin="4,0,4,4">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1"
							SnapsToDevicePixels="True" />
						<ContentPresenter Margin="8,5" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsSelected" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource BackgroundHighlighted}" />
							<Setter Property="BorderBrush" Value="{DynamicResource BorderBrushHighlighted}" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource BackgroundSelected}" />
							<Setter Property="BorderBrush" Value="{DynamicResource BorderBrushSelected}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TileListBox" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Style.Resources>
			<Style BasedOn="{StaticResource TileListBoxItem}" TargetType="{x:Type ListBoxItem}" />
		</Style.Resources>
	</Style>

	<Style x:Key="StandardListBox" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{DynamicResource BackgroundNormal}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrushNormal}" />
		<Setter Property="maControls:ItemHelper.SelectedForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.SelectedBackgroundBrush" Value="{StaticResource BackgroundHighlighted}" />
		<Setter Property="maControls:ItemHelper.ActiveSelectionForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{StaticResource BackgroundSelected}" />
		<Setter Property="maControls:ItemHelper.DisabledForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.DisabledBackgroundBrush" Value="{StaticResource Background}" />
		<Setter Property="maControls:ItemHelper.DisabledSelectedForegroundBrush" Value="{StaticResource Foreground}" />
		<Setter Property="maControls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{StaticResource BackgroundSelected}" />

		<Setter Property="BorderThickness" Value="1" />
		<Style.Resources>
			<Style TargetType="{x:Type ListBoxItem}">
				<Setter Property="Background" Value="{DynamicResource BackgroundNormal}" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Grid>
								<Border
									x:Name="Border"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1"
									SnapsToDevicePixels="True" />
								<ContentPresenter Margin="8,5" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsSelected" Value="True">
									<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
									<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(maControls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="True" />
										<Condition Property="Selector.IsSelectionActive" Value="True" />
									</MultiTrigger.Conditions>
									<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
									<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(maControls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
								</MultiTrigger>

								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
									<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsEnabled" Value="False" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
										<Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(maControls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
									</MultiTrigger.Setters>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
	</Style>
</ResourceDictionary>